22/02/02

1. 윷을 던져 칸만큼 이동 구현
2. 특정 구간에 멈췄을시, 대각선으로 이동 구현

보완할점

1. 좌 대각선으로 이동하다 중앙을 지나가면, 가는도중임에도 불구하고 우 대각선으로 방향을 틀음 (02.03 clear)
2. 도착점에 도착시 멈추기(끝내기)
3. 백도 구현하기
4. 윷을 던질때 윷 하나당 앞면, 뒷면의 확률을 구현하여서 결과를 내보기 (02.03 clear)

22/02/03

1. assertion을 활용하여 테스트 코드를 만들었다. 출력으로 확인하는것이 아닌 코드로 확인하게 만들었다.
2. 왼 대각선으로 내려가다가 말의 이동이 끝나기전에 오른 대각선으로 이동하는 문제를 해결하였다.
   오른 대각선으로 내려가는 경우는 말이 다 이동하고 멈췄을때이므로(독자적인 움직임), 새로운 for문안에 넣어주었다.

3. 윷의 값을 단순히 백도~모 중의 랜덤값이 아닌, 4개의 윷 각각을 굴려서 결과가 나오게 바꾸었다. 
   (Math.random() 메소드를 사용하여 0.5 밑으로는 엎어짐, 위로는 뒤집어짐)

4. ChangeMal이 실행되면 코드마지막에 mal의 boolean 변수 start를 true로 바꾸어 말이 판위에 올라와 이동했다는걸 분류했다.
   

보완할점

1-1 . assertion으로 테스트 코드를 작성중 x,y 좌표를 검사하는데 isEqualto로 객체 비교가 안되었다.
      따라서 x값, y값을 각자 추출하여 작성하여 두줄로 작성이 되었다 -> 지저분 -> 클래스의 멤버내용도 한번에 비교할 순 없을까?

1-2. assertion으로 만든 테스트코드지만 너무 복잡하다, 일일히 좌표를 적지 않고 테스트를 진행할 순 없을까?

2. 도착 정보(30,30에 도착했을 때) 를 알기위해서 말이 필드로 출발했을때의 정보를 추가해야한다.

3. 처음에 백도가 나왔을시에 start를 true로 바꾸지않게 예외처리가 필요하다.